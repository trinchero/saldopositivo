---
import type { CollectionEntry } from "astro:content";
import ServiceLayout from "@/layouts/ServiceLayout.astro";
import { getCollectionStaticPaths } from "@/lib/collection-helpers";

export interface Props {
  data: CollectionEntry<"servicedetails">;
}

export async function getStaticPaths() {
  const rawPaths = await getCollectionStaticPaths("servicedetails");

  console.log("🔍 raw paths from helper:");
  rawPaths.forEach((p) => {
    console.log("→ lang:", p.params.lang, "slug:", p.params.slug);
  });

  const paths = rawPaths.map((path) => {
    const { lang, slug } = path.params;

    const cleanedSlug = slug?.startsWith(`${lang}/`)
      ? slug.slice(lang.length + 1)
      : slug;

    console.log("🧼 Cleaned:", { lang, slug: cleanedSlug });

    const fullSlugPath = lang === "en"
      ? `/services-detail/${cleanedSlug}`
      : `/services-detail/${lang}/${cleanedSlug}`;

    console.log("✅ Path generated:", fullSlugPath);

    return {
      params: {
        slug: fullSlugPath
          .replace("/services-detail/", "")
          .split("/"), // string[] per [...slug]
      },
      props: path.props,
    };
  });

  return paths;
}

const { data } = Astro.props;
const { Content } = await data.render();
---

<ServiceLayout frontmatter={data.data}>
  <Content />
</ServiceLayout>
