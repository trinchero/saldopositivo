---
import type { CollectionEntry } from "astro:content";
import ServiceLayout from "@/layouts/ServiceLayout.astro";
import FreeResourceLayout from "@/layouts/FreeResourceLayout.astro";
import { getCollectionStaticPaths } from "@/lib/collection-helpers";

export interface Props {
  data: CollectionEntry<"servicedetails">;
}

export async function getStaticPaths() {
  const rawPaths = await getCollectionStaticPaths("servicedetails");

  return rawPaths.map(({ params, props }) => {
    const { lang, slug } = params;
    const cleanedSlug = slug?.startsWith(`${lang}/`)
      ? slug.slice(lang.length + 1)
      : slug;

    return {
      params: {
        lang,
        slug: cleanedSlug,
      },
      props,
    };
  });
}

const { data } = Astro.props;
const { Content } = await data.render();
const isFreeResource = data.slug.endsWith("freeresource-detail");
---

{isFreeResource ? (
  <FreeResourceLayout frontmatter={data.data}>
    <Content />
  </FreeResourceLayout>
) : (
  <ServiceLayout frontmatter={data.data}>
    <Content />
  </ServiceLayout>
)}
